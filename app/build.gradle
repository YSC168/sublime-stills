buildscript {
    repositories { maven { url 'https://maven.fabric.io/public' } }
    dependencies {
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.21.6'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

// Load walls properties
def wallsPropertiesFile = rootProject.file("walls.properties");
def wallsProperties = new Properties()
wallsProperties.load(new FileInputStream(wallsPropertiesFile))

String versionNameString = "1.0";

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.aashreys.walls"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 6
        versionName versionNameString
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        release {
            storeFile file(wallsProperties['storeFile'])
            storePassword wallsProperties['storePassword']
            keyAlias wallsProperties['keyAlias']
            keyPassword wallsProperties['keyPassword']
        }
    }

    String STRING = "String";
    String UNSPLASH_API_KEY = "UNSPLASH_API_KEY"
    String GOOGL_API_KEY = "GOOGL_API_KEY";
    String FLICKR_API_KEY = "FLICKR_API_KEY";
    String BOOLEAN = "boolean";
    String PRODUCTION = "PRODUCTION";
    String VERSION_NAME = ""

    buildTypes {
        buildTypes.each {
            // Common build config vars
            it.buildConfigField(STRING, UNSPLASH_API_KEY, wallsProperties['unsplashApiKey'])
            it.buildConfigField(STRING, GOOGL_API_KEY, wallsProperties['googlApiKey'])
            it.buildConfigField(STRING, FLICKR_API_KEY, wallsProperties['flickrApiKey'])
            it.resValue("string", "version_name", versionNameString)
        }
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix '.release'
            buildConfigField BOOLEAN, PRODUCTION, "true"
        }
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix '.debug'
            ext.enableCrashlytics = false
            buildConfigField BOOLEAN, PRODUCTION, "false"
        }
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    flatDir { dirs 'libs' }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/safeapi-1.0.jar')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.squareup', module: 'javawriter'
    })

    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    compile "com.android.support:support-core-ui:${supportLibraryVersion}"
    compile "com.android.support:support-fragment:${supportLibraryVersion}"
    compile "com.android.support:design:${supportLibraryVersion}"
    compile "com.android.support:customtabs:${supportLibraryVersion}"

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    compile 'io.paperdb:paperdb:2.0'

    // Networking libraries
    compile "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    compile 'com.squareup.retrofit2:retrofit:2.2.0'

    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    compile "com.google.dagger:dagger:${daggerVersion}"

    // Google Auto Factory - generates factories so that we don't have to write them
    provided 'com.google.auto.factory:auto-factory:1.0-beta3'

    // Explicitly defining dependencies to resolve version conflicts.
    compile 'com.squareup:javawriter:2.5.1'
    compile "org.objenesis:objenesis:2.5"

    // Required for the @Generated annotation by Google Auto Factory
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }

    compile "org.apache.commons:commons-lang3:3.5"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.5'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    // Since the JSON library used by Android is a part of the SDK we can't mock it easily, so we're
    // adding a pure Java JSON library as a test dependency instead of mocking it in every test.
    testCompile 'org.json:json:20160810'

    testCompile "com.squareup.okhttp3:mockwebserver:${okHttpVersion}"
}
